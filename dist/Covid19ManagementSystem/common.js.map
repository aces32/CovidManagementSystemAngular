{"version":3,"sources":["./src/app/services/administrator-service/administrator.service.ts","./src/app/services/location-service/location.service.ts","./src/app/services/booking-service/booking.service.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Administrator } from 'src/app/models/Administrator';\nimport { AllocateBookingSpaceRequest } from 'src/app/models/AllocateBookingSpaceRequest';\nimport { BookingsReport } from 'src/app/models/BookingsReport';\nimport { environment } from 'src/environments/environment';\n\nconst apiUrl = `${environment.BASE_URL}${environment.Administrator_API}`;\nconst httpOptions = {\n  headers: new HttpHeaders({\n    \"Content-Type\": \"application/json; charset=utf-8\"\n  })\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AdministratorService {\n\n  constructor(private http: HttpClient) { }\n\n\n  submitAllocatedBookingSpace(request: AllocateBookingSpaceRequest): Observable<Administrator>  {\n    console.log(apiUrl);\n    return this.http.post<any>(`${apiUrl}${\"/AllocateBookingSpace\"}`,request, httpOptions).pipe();\n  }\n\n  GetBookingsReports(startDate: string, endDate: string, page: string, size: string ): Observable<BookingsReport[]>  {\n    console.log(apiUrl);\n    return this.http.get<BookingsReport[]>(`${apiUrl}${\"/GetBookingsReports?startDate=\"}\n                ${startDate}${\"&endDate=\"}${endDate}${\"&page=\"}${page}${\"&size=\"}${size}`, httpOptions).pipe();\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { retry} from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\n\nconst apiUrl = `${environment.BASE_URL}${environment.Location_API}`;\nlet httpOptions = {\n  headers: new HttpHeaders({\n    \"Content-Type\": \"application/json; charset=utf-8\"\n  })\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class LocationService {\n\n  constructor(private http: HttpClient)  { }\n\n  getLocationData() : Observable<Location> {\n    console.log(apiUrl);\n    return this.http.get<Location>(apiUrl, httpOptions).pipe(retry(2));\n  }\n}\n\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { BookedCovidTest } from 'src/app/models/BookedCovidTest';\nimport { IndividualBookingInformation } from 'src/app/models/IndividualBookingInformation';\nimport { map } from 'rxjs/operators';\nimport { CancelBookingRequest } from 'src/app/models/CancelBookingRequest';\nimport { CancelBooking } from 'src/app/models/CancelBooking';\n\nconst apiUrl = `${environment.BASE_URL}${environment.Individual_API}`;\nconst httpOptions = {\n  headers: new HttpHeaders({\n    \"Content-Type\": \"application/json; charset=utf-8\"\n  })\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookingService {\n\n  constructor(private http: HttpClient) { }\n\n  submitBookedCovidTest(request: any): Observable<BookedCovidTest>  {\n    console.log(apiUrl);\n    return this.http.post<BookedCovidTest>(`${apiUrl}${\"/BookCovidTest\"}`,request, httpOptions).pipe();\n  }\n\n  GetIndividualInfoByMobileNoAndEmail(emailAddress: string, mobileNumber: string): Observable<IndividualBookingInformation>  {\n    console.log(apiUrl);\n    return this.http.get<IndividualBookingInformation>(`${apiUrl}${\"/getIndividualInfoByMobileNoAndEmail?emailAddress=\"}\n                ${emailAddress}${\"&mobileNumber=\"}${mobileNumber}`, httpOptions).pipe(\n                );\n  }\n\n  cancelBookings(cancelBookingRequest: CancelBookingRequest): Observable<CancelBooking>  {\n    console.log(apiUrl);\n    return this.http.put<any>(`${apiUrl}${\"/CancelBookedTest\"}`, cancelBookingRequest, httpOptions).pipe();\n  }\n}\n"],"sourceRoot":"webpack:///"}