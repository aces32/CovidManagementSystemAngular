{"version":3,"sources":["./src/app/services/individualLabs-Service/individual-labs.service.ts","./src/app/portal/individualLabs/individual-labs.routing.ts","./src/app/portal/individualLabs/individual-labs.module.ts","./src/app/portal/individualLabs/container/individual-labs.component.ts","./src/app/portal/individualLabs/container/individual-labs.component.html"],"names":[],"mappings":"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","file":"individualLabs-individual-labs-module.js","sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { SetTestOutcome } from 'src/app/models/SetTestOutcome';\nimport { SetTestOutcomeRequest } from 'src/app/models/SetTestOutcomeRequest';\nimport { environment } from 'src/environments/environment';\n\nconst apiUrl = `${environment.BASE_URL}${environment.IndividualLabs_API}`;\nconst httpOptions = {\n  headers: new HttpHeaders({\n    \"Content-Type\": \"application/json; charset=utf-8\"\n  })\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IndividualLabsService {\n\n  constructor(private http: HttpClient) { }\n\n  setTestOutCome(testOutCome: SetTestOutcomeRequest): Observable<SetTestOutcome>  {\n    console.log(apiUrl);\n    return this.http.put<any>(`${apiUrl}${\"/SetTestOutcome\"}`, testOutCome, httpOptions).pipe();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { IndividualLabsComponent } from './container/individual-labs.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: IndividualLabsComponent,\n  }\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class IndividualLabsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IndividualLabsRoutingModule } from './individual-labs.routing';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IndividualLabsComponent } from './container/individual-labs.component';\n\n\n\n@NgModule({\n  declarations: [IndividualLabsComponent],\n  imports: [\n    CommonModule,\n    IndividualLabsRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  exports: [\n    IndividualLabsComponent\n  ]\n})\nexport class IndividualLabsModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { IndividualBookingInformation } from 'src/app/models/IndividualBookingInformation';\nimport { SetTestOutcome } from 'src/app/models/SetTestOutcome';\nimport { SetTestOutcomeRequest } from 'src/app/models/SetTestOutcomeRequest';\nimport { BookingService } from 'src/app/services/booking-service/booking.service';\nimport { IndividualLabsService } from 'src/app/services/individualLabs-Service/individual-labs.service';\n\n@Component({\n  selector: 'app-individual-labs',\n  templateUrl: './individual-labs.component.html',\n  styleUrls: ['./individual-labs.component.scss']\n})\nexport class IndividualLabsComponent implements OnInit {\n\n  showLoader: boolean;\n  disableButton: boolean = false;\n  form: FormGroup;\n  individualBookingInformation$:Observable<IndividualBookingInformation>; \n  selectedOutcome: string;\n  selectedOutcomes = [\n    { name: \"positive\", value: \"positive\" },\n    { name: \"negative\", value: \"positve\" }\n  ] \n\n  constructor(private bookingService: BookingService,\n    private toastr: ToastrService, private individualLabsService: IndividualLabsService) { }\n\n  ngOnInit(): void {\n    this.form = new FormGroup({\n      individualEmailAddress: new FormControl('', [Validators.required, Validators.email]),\n      individualMobileNumber: new FormControl('', [Validators.required]),     \n    });\n  }\n\n  get individualEmailAddress() {\n    return this.form.get('individualEmailAddress');\n  }\n\n  get individualMobileNumber() {\n    return this.form.get('individualMobileNumber');\n  }\n\n  showLoaders(): void{\n    this.showLoader = true\n    this.disableButton = true\n  }\n\n  disableLoaders(): void{\n    this.showLoader = false\n    this.disableButton = false;\n  }\n\n  submitForm(): void{\n    if(this.form.invalid){\n      return this.form.markAllAsTouched();\n    }\n\n    this.showLoaders();\n\n    this.individualBookingInformation$ = this.bookingService.GetIndividualInfoByMobileNoAndEmail(\n                      this.form.value.individualEmailAddress, this.form.value.individualMobileNumber)\n    this.disableLoaders(); \n  }\n\n  cancelTestOutcome(): void{\n    this.individualBookingInformation$ = null;\n    this.form.reset();\n  }\n\n  setTestOutcome = (individualLabId: number, selectedOutcome: string): void => {\n    console.log({individualLabId, selectedOutcome})\n\n    const setTestOutcomeRequest: SetTestOutcomeRequest = {\n      individualLabId: individualLabId,\n      testOutCome: selectedOutcome,\n      testCompleted: true\n    }\n\n    this.individualLabsService.setTestOutCome(setTestOutcomeRequest).subscribe((res: SetTestOutcome) =>{\n      this.form.reset();\n      this.individualBookingInformation$ = null;\n      this.toastr.success(\"Test outcome has successfully been set\")\n    },\n\n    (error) => {\n      error.error.forEach(element => {\n        console.log(element);\n        this.toastr.error(element)\n      });\n    })\n  \n  }\n}\n","<div class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n    <h1 class=\"h2\">Update Individual Test Outcome</h1>\n  </div>\n\n  <div class=\"view-portfolio\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <div class=\"card\">\n              <div class=\"card-header card-header-primaryW\">\n                <h2 class=\"card-title\">Set Individual test outcome</h2>\n                <p class=\"card-category\">input individual details</p>\n              </div>\n              <div class=\"card-body\">\n                <form method=\"POST\" [formGroup]=\"form\" (ngSubmit)=\"submitForm()\">\n\n                  <div class=\"row pd-10\">\n                    <div class=\"col-md-12\">\n                      <div class=\"form-group\">\n                        <label class=\"bmd-label-floating\">Email</label>\n                        <input type=\"text\" formControlName=\"individualEmailAddress\" class=\"form-control\" placeholder=\"input email address\">\n                        <div class=\"small alert alert-danger\" *ngIf=\"individualEmailAddress.touched && individualEmailAddress.invalid\">\n                            <span *ngIf=\"!!individualEmailAddress.errors.required\">please input your email address</span>\n                            </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div class=\"row pd-10\">\n                    <div class=\"col-md-12\">\n                      <div class=\"form-group\">\n                        <label class=\"bmd-label-floating\">Mobile Number</label>\n                        <input type=\"text\" formControlName=\"individualMobileNumber\" class=\"form-control\" placeholder=\"input Mobilenumber\">\n                        <div class=\"small alert alert-danger\" *ngIf=\"individualMobileNumber.touched && individualMobileNumber.invalid\">\n                            <span *ngIf=\"!!individualMobileNumber.errors.required\">please input your mobile number date</span>\n                            </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <button class=\"btn btn-primary pull-right pd-10\">\n                    Get Booking Details\n                    <i class=\"fa fa-spinner fa-spin fs-22 float-r\" *ngIf=\"showLoader\"></i>\n                  </button>\n                  <div class=\"clearfix\"></div>\n                </form>\n\n                <div class=\"row pd-10\" *ngIf=\"individualBookingInformation$ != null\">\n                  <div class=\"col-md-12\">\n                      <table class=\"table\">\n                          <thead class=\"thead-dark\">\n                            <tr>\n                              <th scope=\"col\">First Name</th>\n                              <th scope=\"col\">Last Name</th>\n                              <th scope=\"col\">Email Adress</th>\n                              <th scope=\"col\">Mobile Number</th>\n                              <th scope=\"col\">Test Type</th>\n                              <th scope=\"col\">Set Test Outcome</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            <tr  *ngIf=\"individualBookingInformation$ | async as individualBooking\">\n                              <td>{{individualBooking.individualFirstName}}</td>\n                              <td>{{individualBooking.individualLastName}}</td>\n                              <td>{{individualBooking.individualEmailAddress}}</td>\n                              <td>{{individualBooking.individualMobileNumber}}</td>\n                              <td>{{individualBooking.individualLab.testType}}</td>\n                              <td>\n                                <select [(ngModel)]=\"selectedOutcome\">\n                                  <option disabled>Test outcome</option>\n                                  <option *ngFor=\"let selectedOutcome of selectedOutcomes\">\n                                     {{selectedOutcome.name}}\n                                  </option>\n                               </select>\n                              </td>\n                              <td>\n                                <button class=\"btn btn-primary pull-right pd-3 mg-5\" (click)=\"cancelTestOutcome()\">\n                                  cancel\n                                  <i class=\"fa fa-spinner fa-spin fs-22 float-r\" *ngIf=\"showLoader\"></i>\n                                </button>\n                                  <button class=\"btn btn-primary pull-right pd-3 mg-5\" (click)=\"setTestOutcome(individualBooking.individualLab.individualLabId, selectedOutcome)\">\n                                    Set Outcome\n                                    <i class=\"fa fa-spinner fa-spin fs-22 float-r\" *ngIf=\"showLoader\"></i>\n                                  </button>\n                              </td>\n                            </tr>\n                        </table>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n  </div>"],"sourceRoot":"webpack:///"}